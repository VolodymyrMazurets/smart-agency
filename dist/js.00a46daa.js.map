{"version":3,"sources":["js/index.js"],"names":["list","document","getElementById","btn","TEST_DATA","id","icon","title","text","link","renderList","data","listItem","map","innerHTML","join","fetchData","fetch","then","response","json","resp","item","body","e","console","log","addEventListener"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AAEA,MAAME,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,KAAK,EAAE,cAHT;AAIEC,EAAAA,IAAI,EAAE,sCAJR;AAKEC,EAAAA,IAAI,EAAE;AALR,CADgB,EAQhB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,KAAK,EAAE,aAHT;AAIEC,EAAAA,IAAI,EAAE,2CAJR;AAKEC,EAAAA,IAAI,EAAE;AALR,CARgB,EAehB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,4CAJR;AAKEC,EAAAA,IAAI,EAAE;AALR,CAfgB,EAsBhB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,qBAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,IAAI,EAAE,gDAJR;AAKEC,EAAAA,IAAI,EAAE;AALR,CAtBgB,CAAlB;;AA+BA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAS,CAAC;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,GAAD,KAAiC;AACzD,WAAQ;;4BAEgBH,IAAK;0DACyBC,KAAM;;oBAE5CC,IAAK;;;uBAGFC,IAAK;;;;gBARxB;AAaD,GAdgB,CAAjB;AAeAT,EAAAA,IAAI,CAACc,SAAL,GAAiBF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAjB;AACD,CAjBD;;AAqBA,MAAMC,SAAS,GAAG,YAAY;AAC5Bb,EAAAA,GAAG,CAACW,SAAJ,GAAgB,0BAAhB;;AACA,MAAI;AACF,UAAMG,KAAK,CAAC,iDAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAc;AAClBhB,MAAAA,GAAG,CAACW,SAAJ,GAAgB,SAAhB;AACA,aAAOK,QAAQ,CAACC,IAAT,EAAP;AACD,KAJK,EAKLF,IALK,CAKCE,IAAD,IAAU;AACd,YAAMC,IAAI,GAAID,IAAD,CAAOP,GAAP,CAAYS,IAAD,KAAW;AAACd,QAAAA,IAAI,EAAEc,IAAI,CAACC,IAAZ;AAAkBhB,QAAAA,KAAK,EAAEe,IAAI,CAACf,KAA9B;AAAqCE,QAAAA,IAAI,EAAE,GAA3C;AAAgDH,QAAAA,IAAI,EAAE;AAAtD,OAAX,CAAX,CAAb;AACAI,MAAAA,UAAU,CAACW,IAAD,CAAV;AACD,KARK,CAAN;AASD,GAVD,CAUE,OAAOG,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AAEF,CAhBD;;AAkBArB,GAAG,CAACwB,gBAAJ,CAAqB,OAArB,EAA8B,MAAMX,SAAS,EAA7C","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const list = document.getElementById(\"list\");\r\nconst btn = document.getElementById(\"btn\");\r\n\r\nconst TEST_DATA = [\r\n  {\r\n    id: 1,\r\n    icon: \"fas fa-magnet\",\r\n    title: \"Koc Koi Tomi\",\r\n    text: \"Lorem ipsum is dummy lorem very dumy\",\r\n    link: \"#\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: \"fas fa-bug\",\r\n    title: \"Koimona Set\",\r\n    text: \"Lorem ipsum is dummy lorem very dumyddddd\",\r\n    link: \"#\",\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: \"fas fa-cogs\",\r\n    title: \"Setting Koire\",\r\n    text: \"Lorem ipsum is dummy lorem very dumy ddddd\",\r\n    link: \"#\",\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: \"fas fa-camera-retro\",\r\n    title: \"Ko Image Lara\",\r\n    text: \"Lorem ipsum is dummy lorem very dumy dddddddda\",\r\n    link: \"#\",\r\n  },\r\n];\r\n\r\nconst renderList = (data) => {\r\n  const listItem = data.map(({ icon, title, text, link }) => {\r\n    return `<li class=\"working-process__item\">\r\n                <div class=\"working-process__wrapper\">\r\n                <i class=\"${icon} working-process__icon\"></i>\r\n                <h4 class=\"working-process__card-title\">${title}</h4>\r\n                <p class=\"working-process__card-text\">\r\n                  ${text}\r\n                </p>\r\n            </div>\r\n            <a href=\"${link}\" class=\"working-process__card-btn\">\r\n              <i class=\"fas fa-plus\"></i>\r\n              Know More\r\n            </a>\r\n          </li>`;\r\n  });\r\n  list.innerHTML = listItem.join(\"\");\r\n};\r\n\r\n\r\n\r\nconst fetchData = async () => {\r\n  btn.innerHTML = \"<span uk-spinner></span>\";\r\n  try {\r\n    await fetch(\"https://jsonplaceholder.typicode.com/plfajlkafj\")\r\n    .then((response) => {\r\n      btn.innerHTML = \"Primary\";\r\n      return response.json();\r\n    })\r\n    .then((json) => {\r\n      const resp = (json).map((item) => ({text: item.body, title: item.title, link: '#', icon: 'fas fa-magnet'}));\r\n      renderList(resp);\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  \r\n};\r\n\r\nbtn.addEventListener(\"click\", () => fetchData());\r\n"]}